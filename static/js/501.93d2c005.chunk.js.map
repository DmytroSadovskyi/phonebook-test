{"version":3,"file":"static/js/501.93d2c005.chunk.js","mappings":"4UAOMA,EAAcC,EAAAA,GAAW,CAC7BC,MAAOD,EAAAA,GAAW,oBACfC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,EAAAA,GAAW,uBAClBI,IAAI,EAAG,qDACPF,SAAS,0BA4Ed,EAzEyB,WACvB,IAAMG,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAA2B,WAC/BD,GAAgB,SAAAE,GAAgB,OAAKA,CAAL,GACjC,EACD,OACE,SAAC,KAAD,CACEC,cAAe,CACbX,MAAO,GACPE,SAAU,IAEZU,iBAAkBd,EAClBe,SAAU,WAAgBC,GAAa,IAAvBC,EAAsB,oBACpCX,GAASY,EAAAA,EAAAA,KAAM,UAAKD,KACpBD,EAAQG,WACT,EATH,SAWG,gBAAGC,EAAH,EAAGA,aAAH,OACC,kBAAML,SAAUK,EAAhB,WACE,SAAC,KAAD,CAAOC,KAAK,QAAZ,SACG,gBAAGC,EAAH,EAAGA,MAAH,IAAUC,KAAQC,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,OAA3B,OACC,SAACC,EAAA,GAAD,kBACMJ,GADN,IAEEK,MAAM,QACNC,QAAQ,WACRC,MAAOL,EAAQtB,OAAS4B,QAAQL,EAAOvB,OACvC6B,WAAYP,EAAQtB,OAASuB,EAAOvB,MACpC8B,WAAS,EACTC,OAAO,SACPC,aAAa,MACbC,KAAK,UAVR,KAeH,SAAC,KAAD,CAAOd,KAAK,WAAZ,SACG,gBAAGC,EAAH,EAAGA,MAAH,IAAUC,KAAQC,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,OAA3B,OACC,SAACC,EAAA,GAAD,kBACMJ,GADN,IAEEc,KAAM3B,EAAe,OAAS,WAC9BkB,MAAM,WACNC,QAAQ,WACRC,MAAOL,EAAQpB,UAAY0B,QAAQL,EAAOrB,UAC1C2B,WAAYP,EAAQpB,UAAYqB,EAAOrB,SACvC4B,WAAS,EACTC,OAAO,SACPC,aAAa,MACbC,KAAK,QACLE,GAAI,CAAEC,GAAI,GACVC,WAAY,CACVC,cACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACE,SAACC,EAAA,EAAD,CAAYC,QAASjC,EAArB,SACGF,GAAe,SAACoC,EAAA,EAAD,KAAoB,SAACC,EAAA,EAAD,WAjB/C,KA0BH,SAACC,EAAA,EAAD,CAAQX,KAAK,SAASR,QAAQ,YAAYoB,MAAM,UAAUhB,WAAS,EAAnE,sBA7CH,GAoDN,E,SC1DD,EAzBkB,WAChB,IAAMH,GAAQoB,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B,OACE,2BACE,8BACE,UAACC,EAAA,EAAD,YACE,SAAC,EAAD,IACCtB,IACC,cACEuB,MAAO,CACLJ,MAAO,MACPK,UAAW,MACXC,UAAW,UAJf,mEAcX,C","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { Formik, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { useState } from 'react';\nimport * as Yup from 'yup';\nimport { TextField, Button, InputAdornment, IconButton } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nconst LogInSchema = Yup.object({\n  email: Yup.string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: Yup.string('Enter your password')\n    .min(6, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handlePasswordVisibility = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={LogInSchema}\n      onSubmit={({ ...values }, actions) => {\n        dispatch(logIn({ ...values }));\n        actions.resetForm();\n      }}\n    >\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <Field name=\"email\">\n            {({ field, form: { touched, errors } }) => (\n              <TextField\n                {...field}\n                label=\"Email\"\n                variant=\"outlined\"\n                error={touched.email && Boolean(errors.email)}\n                helperText={touched.email && errors.email}\n                fullWidth\n                margin=\"normal\"\n                autoComplete=\"off\"\n                size=\"small\"\n              />\n            )}\n          </Field>\n\n          <Field name=\"password\">\n            {({ field, form: { touched, errors } }) => (\n              <TextField\n                {...field}\n                type={showPassword ? 'text' : 'password'}\n                label=\"Password\"\n                variant=\"outlined\"\n                error={touched.password && Boolean(errors.password)}\n                helperText={touched.password && errors.password}\n                fullWidth\n                margin=\"normal\"\n                autoComplete=\"off\"\n                size=\"small\"\n                sx={{ mb: 2 }}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton onClick={handlePasswordVisibility}>\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            )}\n          </Field>\n\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n            Log In\n          </Button>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import Container from 'components/Container/Container';\nimport LoginForm from 'components/LoginForm/LoginForm';\nimport { useSelector } from 'react-redux';\nimport { selectError } from 'redux/auth/selectors';\nconst LoginPage = () => {\n  const error = useSelector(selectError);\n\n  return (\n    <main>\n      <section>\n        <Container>\n          <LoginForm />\n          {error && (\n            <p\n              style={{\n                color: 'red',\n                marginTop: '5px',\n                textAlign: 'center',\n              }}\n            >\n              Oops, something went wrong... Please, try again\n            </p>\n          )}\n        </Container>\n      </section>\n    </main>\n  );\n};\n\nexport default LoginPage;\n"],"names":["LogInSchema","Yup","email","required","password","min","dispatch","useDispatch","useState","showPassword","setShowPassword","handlePasswordVisibility","prevShowPassword","initialValues","validationSchema","onSubmit","actions","values","logIn","resetForm","handleSubmit","name","field","form","touched","errors","TextField","label","variant","error","Boolean","helperText","fullWidth","margin","autoComplete","size","type","sx","mb","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","VisibilityOff","Visibility","Button","color","useSelector","selectError","Container","style","marginTop","textAlign"],"sourceRoot":""}